---
export interface Props {
  variant?: "primary" | "secondary" | "outline";
  size?: "sm" | "md" | "lg";
  href?: string;
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
  class?: string;
}

const {
  variant = "primary",
  size = "md",
  href,
  type = "button",
  disabled = false,
  class: className = "",
} = Astro.props;

const baseClasses = `button button--${variant} button--${size}`;
const classes = `${baseClasses} ${className}`.trim();
---

{
  href ? (
    <a href={href} class={classes}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes} disabled={disabled}>
      <slot />
    </button>
  )
}

<style>
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: var(--font-body);
    font-weight: 500;
    text-decoration: none;
    border: 1px solid transparent;
    border-radius: var(--radius-full);
    cursor: pointer;
    transition: all var(--transition-fast);
    white-space: nowrap;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  .button:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  /* Variants */
  .button--primary {
    background-color: var(--color-primary);
    color: var(--color-bg);
    border-color: var(--color-primary);
  }

  .button--primary:hover:not(:disabled) {
    background-color: var(--color-primary-hover);
    border-color: var(--color-primary-hover);
  }

  .button--secondary {
    background-color: var(--color-bg-secondary);
    color: var(--color-text);
    border-color: var(--color-border);
  }

  .button--secondary:hover:not(:disabled) {
    background-color: var(--color-bg-tertiary);
    border-color: var(--color-border-light);
  }

  .button--outline {
    background-color: transparent;
    color: var(--color-primary);
    border-color: var(--color-primary);
  }

  .button--outline:hover:not(:disabled) {
    background-color: var(--color-primary);
    color: var(--color-bg);
  }

  /* Sizes */
  .button--sm {
    padding: var(--space-3xs) var(--space-xs);
    font-size: var(--step--1);
    min-height: 2rem;
  }

  .button--md {
    padding: var(--space-3xs) var(--space-s);
    font-size: var(--step-0);
    min-height: 2.5rem;
  }

  .button--lg {
    padding: var(--space-2xs) var(--space-l);
    font-size: var(--step-1);
    min-height: 3rem;
  }

  @media (max-width: 480px) {
    .button {
      white-space: normal;
      text-align: center;
    }
  }
</style>
